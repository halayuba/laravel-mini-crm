/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/base.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/base";
 */
@tailwind base;

.form_label {
  @apply block text-gray-700 text-sm font-bold mb-2;
}
.form_input {
  @apply w-full bg-gray-100 text-gray-900 border border-gray-400 rounded px-3 py-3;
}
.form_input:focus {
  @apply bg-white border-indigo-700;
}
.form_textarea {
  @apply appearance-none block w-full bg-gray-300 text-gray-700 border border-gray-300 rounded py-3 px-4 mb-3 leading-tight;
}
.form_textarea:focus {
  @apply bg-white border-gray-500 outline-none;
}
.btn_cancel {
  @apply text-center align-middle whitespace-no-wrap select-none cursor-pointer inline-block mb-0 bg-transparent border border-gray-400 text-gray-700 font-semibold text-lg rounded leading-tight px-4 py-2;
}
 .btn_cancel:hover {
   @apply bg-gray-300;
 }
.btn_new {
  @apply text-center align-middle whitespace-no-wrap select-none cursor-pointer inline-block mb-0 bg-blue-500 border border-gray-400 text-white font-semibold text-lg rounded leading-tight px-4 py-2 shadow;
}
.btn_new:hover {
   @apply bg-blue-600;
 }
.btn_jobsave {
  @apply text-center align-middle whitespace-no-wrap select-none cursor-pointer inline-block mb-0 bg-green-500 border border-gray-400 text-green-900 font-semibold text-lg rounded leading-tight px-4 py-2 shadow;
}
.btn_jobsave:hover {
  @apply bg-green-600 text-white;
}
.btn_jobsave:focus {
  @apply outline-none shadow-outline;
}
.btn_action {
  @apply self-center bg-orange-600 p-1 border border-orange-700 rounded;
}
.btn_action:hover {
  @apply bg-orange-400;
}
.alert {
  @apply bg-orange-800 border-l-4 border-orange-400 text-orange-600;
}
.tbl_header {
  @apply font-semibold tracking-wide leading-loose border-b-2 border-blue-500;
}

@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */
 /* //====================
  //== EXTRACTED
 //==================== */

.transition {
  transition: all 300ms ease;
}
.transition:hover {
  box-shadow: 5px 0 10px 0 rgba(34, 147, 16, 0.8);
  transform: translateY(-2px);
}
 .border-t-blue {border-top-color: #3ebfea !important}

/* //====================
  //== CUSTOM CSS
 //==================== */
input[type="checkbox"].css3checkbox{
  display: none;
}

label.toggler{ /* checkbox label */
  display: block;
  position: relative;
  padding-left: 32px; /* space to the left of label text */
  padding-top: 2px;
  cursor: pointer;
}

label.toggler::before{ /* flat box */
  content: '';
  display: block;
  position: absolute;
  width: 25px;
  height: 25px;
  background: #c4d7e0 ; /* B1E5EF */
  box-shadow: 0 0 3px #BFDEFC inset;
  left: 0;
  top: 0;
}

label.toggler::after{ /* check mark inside flat box*/
  content: '\f00c'; /* fontAwesome icon font unicode. See http://fortawesome.github.io/Font-Awesome/cheatsheet/ for others */
  position:absolute;
  left: 3px;
  top: 3px;
  font: bold 18px FontAwesome;
  color: #6D82B4; /* 1B4977 */
  width: 0; /* hide check mark initially */
  text-shadow: 0 0 2px #eee;
  overflow: hidden;
}

input[type="checkbox"]:checked + label.toggler::after{ /* check mark when checkbox is checked */
  transition: width 0.2s; /* CSS3 transition on width property */
  width: 25px; /* expand check mark to show it. Value should reflect that of container box */
}
